{"ast":null,"code":"import axios from \"axios\";\nexport async function getAllMovements() {\n  const res = await axios.get(\"http://localhost:3001/api/movement\");\n  return res.data;\n}\nexport async function getAllMuscles() {\n  const res = await axios.get(\"http://localhost:3001/api/muscles\");\n  return res.data;\n}\nexport async function getGlobalWorkouts() {\n  const res = await axios.get(\"http://localhost:3001/api/routine\");\n  return res.data;\n}\nexport async function getRoutineNums() {\n  const res = await axios.get(\"http://localhost:3001/api/routineIDs\");\n  return res.data;\n}\nexport function organizePostData(workoutData, workouts) {\n  console.log(workoutData, workouts);\n  const workout_id = workoutData.id;\n  const routine = {};\n  routine.name = workoutData.name;\n  routine.description = workoutData.description;\n  routine.user_id = workoutData.user_id;\n  routine.id = workout_id;\n  const exerciseList = workouts.map(workout => {\n    return {\n      movement: workout.id,\n      sets: workout.sets,\n      reps: workout.reps,\n      time: workout.time,\n      description: workout.description,\n      routine_id: workout_id\n    };\n  });\n  postRoutineWithExercises(routine, exerciseList);\n}\nexport async function postRoutineWithExercises(routine, exerciseList) {\n  try {\n    const payload = {\n      routine,\n      exerciseList\n    };\n    const res = await axios.post(\"http://localhost:3001/api/postRoutines\", payload);\n    return res.data; // { routine: {...}, exercises: [...] }\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error posting routine:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","getAllMovements","res","get","data","getAllMuscles","getGlobalWorkouts","getRoutineNums","organizePostData","workoutData","workouts","console","log","workout_id","id","routine","name","description","user_id","exerciseList","map","workout","movement","sets","reps","time","routine_id","postRoutineWithExercises","payload","post","error","_error$response","response","message"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/components/movementService.js"],"sourcesContent":["import axios from \"axios\";\n\nexport async function getAllMovements() {\n  const res = await axios.get(\"http://localhost:3001/api/movement\");\n  return res.data;\n}\nexport async function getAllMuscles() {\n  const res = await axios.get(\"http://localhost:3001/api/muscles\");\n  return res.data;\n}\n\nexport async function getGlobalWorkouts() {\n  const res = await axios.get(\"http://localhost:3001/api/routine\");\n  return res.data;\n}\n\nexport async function getRoutineNums() {\n  const res = await axios.get(\"http://localhost:3001/api/routineIDs\");\n  return res.data;\n}\n\nexport function organizePostData(workoutData, workouts) {\n  console.log(workoutData, workouts)\n  const workout_id = workoutData.id;\n  const routine = {};\n  routine.name = workoutData.name;\n  routine.description = workoutData.description;\n  routine.user_id = workoutData.user_id;\n  routine.id = workout_id;\n  const exerciseList = workouts.map(workout => {\n    return {\n      movement: workout.id,\n      sets: workout.sets,\n      reps: workout.reps,\n      time: workout.time,\n      description: workout.description,\n      routine_id: workout_id\n    };\n  }\n  );\n  postRoutineWithExercises(routine, exerciseList);\n\n}\n\n\nexport async function postRoutineWithExercises(routine, exerciseList) {\n  try {\n    const payload = {\n      routine,\n      exerciseList,\n    };\n\n    const res = await axios.post(\"http://localhost:3001/api/postRoutines\", payload);\n\n    return res.data; // { routine: {...}, exercises: [...] }\n  } catch (error) {\n    console.error(\"Error posting routine:\", error.response?.data || error.message);\n    throw error;\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,eAAeA,CAAA,EAAG;EACtC,MAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,oCAAoC,CAAC;EACjE,OAAOD,GAAG,CAACE,IAAI;AACjB;AACA,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,MAAMH,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,mCAAmC,CAAC;EAChE,OAAOD,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,eAAeE,iBAAiBA,CAAA,EAAG;EACxC,MAAMJ,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,mCAAmC,CAAC;EAChE,OAAOD,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,eAAeG,cAAcA,CAAA,EAAG;EACrC,MAAML,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,sCAAsC,CAAC;EACnE,OAAOD,GAAG,CAACE,IAAI;AACjB;AAEA,OAAO,SAASI,gBAAgBA,CAACC,WAAW,EAAEC,QAAQ,EAAE;EACtDC,OAAO,CAACC,GAAG,CAACH,WAAW,EAAEC,QAAQ,CAAC;EAClC,MAAMG,UAAU,GAAGJ,WAAW,CAACK,EAAE;EACjC,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClBA,OAAO,CAACC,IAAI,GAAGP,WAAW,CAACO,IAAI;EAC/BD,OAAO,CAACE,WAAW,GAAGR,WAAW,CAACQ,WAAW;EAC7CF,OAAO,CAACG,OAAO,GAAGT,WAAW,CAACS,OAAO;EACrCH,OAAO,CAACD,EAAE,GAAGD,UAAU;EACvB,MAAMM,YAAY,GAAGT,QAAQ,CAACU,GAAG,CAACC,OAAO,IAAI;IAC3C,OAAO;MACLC,QAAQ,EAAED,OAAO,CAACP,EAAE;MACpBS,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,IAAI,EAAEJ,OAAO,CAACI,IAAI;MAClBR,WAAW,EAAEI,OAAO,CAACJ,WAAW;MAChCS,UAAU,EAAEb;IACd,CAAC;EACH,CACA,CAAC;EACDc,wBAAwB,CAACZ,OAAO,EAAEI,YAAY,CAAC;AAEjD;AAGA,OAAO,eAAeQ,wBAAwBA,CAACZ,OAAO,EAAEI,YAAY,EAAE;EACpE,IAAI;IACF,MAAMS,OAAO,GAAG;MACdb,OAAO;MACPI;IACF,CAAC;IAED,MAAMjB,GAAG,GAAG,MAAMF,KAAK,CAAC6B,IAAI,CAAC,wCAAwC,EAAED,OAAO,CAAC;IAE/E,OAAO1B,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAO0B,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdpB,OAAO,CAACmB,KAAK,CAAC,wBAAwB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgB3B,IAAI,KAAI0B,KAAK,CAACG,OAAO,CAAC;IAC9E,MAAMH,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}