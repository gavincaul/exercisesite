{"ast":null,"code":"var _jsxFileName = \"/home/gavin/VSC/Websites/exercisesite/client/src/pages/Workouts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport groupedData from \"../data/workouts.json\"; // global workouts\nimport GroupedExercises from \"../components/GroupedExercises.tsx\";\nimport \"./Exercise.css\";\nimport NavBar from \"../components/NavBar.tsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Workouts() {\n  _s();\n  const navigate = useNavigate();\n  const [openGroupTitle, setOpenGroupTitle] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"my\"); // 'my' or 'global'\n\n  // Replace this with your actual \"My Workouts\" data source\n  const myWorkouts = [\n  // Example dummy data, same structure as groupedData expected\n  {\n    title: \"My Upper Body\",\n    exercises: [{\n      id: 1,\n      name: \"Push-up\" /* other exercise props */\n    }, {\n      id: 2,\n      name: \"Pull-up\" /* ... */\n    }]\n  }\n  // Add more groups as needed\n  ];\n\n  // Select which dataset to display based on activeTab\n  const displayedData = activeTab === \"my\" ? myWorkouts : groupedData;\n  const toggleGroup = title => {\n    setOpenGroupTitle(prev => prev === title ? null : title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerconsole\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"1rem\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"my\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setActiveTab(\"my\");\n            setOpenGroupTitle(null);\n          },\n          style: {\n            padding: \"0.5rem 1.5rem\",\n            fontSize: \"1.1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"8px\",\n            border: activeTab === \"my\" ? \"2px solid #007bff\" : \"1px solid #ccc\",\n            backgroundColor: activeTab === \"my\" ? \"#007bff\" : \"white\",\n            color: activeTab === \"my\" ? \"white\" : \"#333\",\n            transition: \"all 0.3s ease\"\n          },\n          children: \"My Workouts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"global\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setActiveTab(\"global\");\n            setOpenGroupTitle(null);\n          },\n          style: {\n            padding: \"0.5rem 1.5rem\",\n            fontSize: \"1.1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"8px\",\n            border: activeTab === \"global\" ? \"2px solid #007bff\" : \"1px solid #ccc\",\n            backgroundColor: activeTab === \"global\" ? \"#007bff\" : \"white\",\n            color: activeTab === \"global\" ? \"white\" : \"#333\",\n            transition: \"all 0.3s ease\"\n          },\n          children: \"Global Workouts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content scrolling\",\n        children: displayedData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#666\"\n          },\n          children: \"No workouts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : displayedData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `section ${openGroupTitle === group.title ? \"active\" : \"\"}`,\n            onClick: () => toggleGroup(group.title),\n            children: group.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), openGroupTitle === group.title && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(GroupedExercises, {\n              groupedData: [group]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginTop: \"1rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate(\"/exercise\", {\n                  state: {\n                    group\n                  }\n                }),\n                className: \"section\",\n                style: {\n                  width: \"fit-content\",\n                  padding: \"0.5rem 1rem\",\n                  marginTop: \"1rem\",\n                  backgroundColor: \"#007bff\",\n                  color: \"white\",\n                  borderRadius: \"8px\",\n                  fontSize: \"1rem\"\n                },\n                children: [\"Start \", group.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, group.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Workouts, \"rafw9NaHRyOr83j+BtYMBm48/w8=\", false, function () {\n  return [useNavigate];\n});\n_c = Workouts;\nvar _c;\n$RefreshReg$(_c, \"Workouts\");","map":{"version":3,"names":["React","useState","useNavigate","groupedData","GroupedExercises","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Workouts","_s","navigate","openGroupTitle","setOpenGroupTitle","activeTab","setActiveTab","myWorkouts","title","exercises","id","name","displayedData","toggleGroup","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","gap","marginBottom","onClick","padding","fontSize","cursor","borderRadius","border","backgroundColor","color","transition","length","textAlign","map","group","marginTop","state","width","_c","$RefreshReg$"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/pages/Workouts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport groupedData from \"../data/workouts.json\"; // global workouts\nimport GroupedExercises from \"../components/GroupedExercises.tsx\";\nimport \"./Exercise.css\";\nimport NavBar from \"../components/NavBar.tsx\";\n\nexport default function Workouts() {\n  const navigate = useNavigate();\n  const [openGroupTitle, setOpenGroupTitle] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"my\"); // 'my' or 'global'\n\n  // Replace this with your actual \"My Workouts\" data source\n  const myWorkouts = [\n    // Example dummy data, same structure as groupedData expected\n    {\n      title: \"My Upper Body\",\n      exercises: [\n        { id: 1, name: \"Push-up\", /* other exercise props */ },\n        { id: 2, name: \"Pull-up\", /* ... */ },\n      ],\n    },\n    // Add more groups as needed\n  ];\n\n  // Select which dataset to display based on activeTab\n  const displayedData = activeTab === \"my\" ? myWorkouts : groupedData;\n\n  const toggleGroup = (title) => {\n    setOpenGroupTitle((prev) => (prev === title ? null : title));\n  };\n\n  return (\n    <div className=\"background\">\n\n      <NavBar />\n      <div className=\"title\">Workouts</div>\n      <div className=\"centerconsole\">\n\n\n        {/* Two-bar menu */}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"1rem\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            className={`tab-button ${activeTab === \"my\" ? \"active\" : \"\"}`}\n            onClick={() => {\n              setActiveTab(\"my\");\n              setOpenGroupTitle(null);\n            }}\n            style={{\n              padding: \"0.5rem 1.5rem\",\n              fontSize: \"1.1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"8px\",\n              border: activeTab === \"my\" ? \"2px solid #007bff\" : \"1px solid #ccc\",\n              backgroundColor: activeTab === \"my\" ? \"#007bff\" : \"white\",\n              color: activeTab === \"my\" ? \"white\" : \"#333\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            My Workouts\n          </button>\n          <button\n            className={`tab-button ${activeTab === \"global\" ? \"active\" : \"\"}`}\n            onClick={() => {\n              setActiveTab(\"global\");\n              setOpenGroupTitle(null);\n            }}\n            style={{\n              padding: \"0.5rem 1.5rem\",\n              fontSize: \"1.1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"8px\",\n              border: activeTab === \"global\" ? \"2px solid #007bff\" : \"1px solid #ccc\",\n              backgroundColor: activeTab === \"global\" ? \"#007bff\" : \"white\",\n              color: activeTab === \"global\" ? \"white\" : \"#333\",\n              transition: \"all 0.3s ease\",\n            }}\n          >\n            Global Workouts\n          </button>\n        </div>\n\n        {/* Workout groups list */}\n        <div className=\"main-content scrolling\">\n          {displayedData.length === 0 ? (\n            <p style={{ textAlign: \"center\", color: \"#666\" }}>\n              No workouts available.\n            </p>\n          ) : (\n            displayedData.map((group) => (\n              <div key={group.title} className=\"group\">\n                <button\n                  className={`section ${\n                    openGroupTitle === group.title ? \"active\" : \"\"\n                  }`}\n                  onClick={() => toggleGroup(group.title)}\n                >\n                  {group.title}\n                </button>\n\n                {openGroupTitle === group.title && (\n                  <>\n                    <GroupedExercises groupedData={[group]} />\n                    <div style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\n                      <button\n                        onClick={() =>\n                          navigate(\"/exercise\", {\n                            state: { group },\n                          })\n                        }\n                        className=\"section\"\n                        style={{\n                          width: \"fit-content\",\n                          padding: \"0.5rem 1rem\",\n                          marginTop: \"1rem\",\n                          backgroundColor: \"#007bff\",\n                          color: \"white\",\n                          borderRadius: \"8px\",\n                          fontSize: \"1rem\",\n                        }}\n                      >\n                        Start {group.title}\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}