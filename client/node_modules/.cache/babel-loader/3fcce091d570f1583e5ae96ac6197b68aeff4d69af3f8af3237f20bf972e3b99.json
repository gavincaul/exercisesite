{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"https://exercisesite-1e7b88b40e5c.herokuapp.com/\";\nexport async function getAllMovements() {\n  const res = await axios.get(\"http://localhost:3001/api/movement\");\n  return res.data;\n}\nexport async function getAllMuscles() {\n  const res = await axios.get(\"http://localhost:3001/api/muscles\");\n  return res.data;\n}\nexport async function getGlobalWorkouts() {\n  const res = await axios.get(\"http://localhost:3001/api/routine/global\");\n  return res.data;\n}\nexport async function getUserWorkouts(userId) {\n  const res = await axios.get(`http://localhost:3001/api/routine/user/${userId}`);\n  return res.data;\n}\nexport async function getRoutineNums() {\n  const res = await axios.get(\"http://localhost:3001/api/routineIDs\");\n  return res.data;\n}\nexport async function organizePostData(workoutData, workouts) {\n  const workout_id = workoutData.id;\n  const routine = {};\n  routine.name = workoutData.name;\n  routine.description = workoutData.description;\n  routine.user_id = workoutData.user_id;\n  routine.id = workout_id;\n  const exerciseList = workouts.map(workout => {\n    return {\n      movement: workout.id,\n      sets: workout.sets,\n      reps: workout.reps,\n      time: workout.time,\n      instructions: workout.description,\n      routine_id: workout_id\n    };\n  });\n  return await postRoutineWithExercises(routine, exerciseList);\n}\nexport async function postRoutineWithExercises(routine, exerciseList) {\n  try {\n    const payload = {\n      routine,\n      exerciseList\n    };\n    const res = await axios.post(\"http://localhost:3001/api/postRoutines\", payload);\n    return res.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error posting routine:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n}\nexport async function signup(email, password, inviteCode) {\n  const res = await axios.post(\"http://localhost:3001/api/auth/signup\", {\n    email,\n    password,\n    inviteCode\n  });\n  return res.data;\n}\nexport async function login(email, password) {\n  const res = await axios.post(\"http://localhost:3001/api/auth/login\", {\n    email,\n    password\n  });\n  return res.data;\n}\nexport function getUser() {\n  try {\n    const userData = localStorage.getItem(\"user\");\n    if (!userData) return null;\n    return JSON.parse(userData);\n  } catch (error) {\n    console.error(\"Error parsing user data from localStorage\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","BASE_URL","getAllMovements","res","get","data","getAllMuscles","getGlobalWorkouts","getUserWorkouts","userId","getRoutineNums","organizePostData","workoutData","workouts","workout_id","id","routine","name","description","user_id","exerciseList","map","workout","movement","sets","reps","time","instructions","routine_id","postRoutineWithExercises","payload","post","error","_error$response","console","response","message","signup","email","password","inviteCode","login","getUser","userData","localStorage","getItem","JSON","parse"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/components/movementService.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"https://exercisesite-1e7b88b40e5c.herokuapp.com/\";\nexport async function getAllMovements() {\n  const res = await axios.get(\"http://localhost:3001/api/movement\");\n  return res.data;\n}\nexport async function getAllMuscles() {\n  const res = await axios.get(\"http://localhost:3001/api/muscles\");\n  return res.data;\n}\n\nexport async function getGlobalWorkouts() {\n  const res = await axios.get(\"http://localhost:3001/api/routine/global\");\n  return res.data;\n}\nexport async function getUserWorkouts(userId) {\n  const res = await axios.get(`http://localhost:3001/api/routine/user/${userId}`);\n  return res.data;\n}\n\nexport async function getRoutineNums() {\n  const res = await axios.get(\"http://localhost:3001/api/routineIDs\");\n  return res.data;\n}\n\nexport async function organizePostData(workoutData, workouts) {\n  const workout_id = workoutData.id;\n  const routine = {};\n  routine.name = workoutData.name;\n  routine.description = workoutData.description;\n  routine.user_id = workoutData.user_id;\n  routine.id = workout_id;\n  const exerciseList = workouts.map(workout => {\n    return {\n      movement: workout.id,\n      sets: workout.sets,\n      reps: workout.reps,\n      time: workout.time,\n      instructions: workout.description,\n      routine_id: workout_id\n    };\n  }\n  );\n  return await postRoutineWithExercises(routine, exerciseList);\n\n}\n\n\nexport async function postRoutineWithExercises(routine, exerciseList) {\n  try {\n    const payload = {\n      routine,\n      exerciseList,\n    };\n\n    const res = await axios.post(\"http://localhost:3001/api/postRoutines\", payload);\n\n    return res.data; \n  } catch (error) {\n    console.error(\"Error posting routine:\", error.response?.data || error.message);\n    throw error;\n  }\n}\n\n\nexport async function signup(email, password, inviteCode) {\n  const res = await axios.post(\"http://localhost:3001/api/auth/signup\", { email, password, inviteCode });\n  return res.data;\n}\n\nexport async function login(email, password) {\n  const res = await axios.post(\"http://localhost:3001/api/auth/login\", { email, password });\n  return res.data;\n}\n\nexport function getUser() {\n  try {\n    const userData = localStorage.getItem(\"user\");\n    if (!userData) return null;\n    return JSON.parse(userData);\n  } catch (error) {\n    console.error(\"Error parsing user data from localStorage\", error);\n    return null;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}