{"ast":null,"code":"var _jsxFileName = \"/home/gavin/VSC/Websites/exercisesite/client/src/pages/MusclesEncyclopedia.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar.tsx\";\nimport FlipCard from \"../components/Flipcard.tsx\";\nimport \"./Encyclopedia.css\";\nimport { getAllMuscles } from \"../components/movementService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MusclesEncyclopedia() {\n  _s();\n  const [muscles, setMuscles] = useState([]); // store as array for easy filtering\n  const [query, setQuery] = useState(\"\");\n  const [flipped, setFlipped] = useState(false);\n  const [MGFilters, setMGFilters] = useState({\n    arm: true,\n    back: true,\n    chest: true,\n    core: true,\n    etc: true,\n    foot: true,\n    hand: true,\n    leg: true,\n    neck: true,\n    shoulder: true\n  });\n  useEffect(() => {\n    getAllMuscles().then(data => setMuscles(data)).catch(console.error);\n  }, []);\n\n  // ✅ filtering by name + group checkbox\n  const filtered = muscles.filter(m => {\n    var _m$muscle_group, _MGFilters$group;\n    const matchesQuery = m.name.toLowerCase().includes(query.toLowerCase());\n    const group = (_m$muscle_group = m.muscle_group) === null || _m$muscle_group === void 0 ? void 0 : _m$muscle_group.toLowerCase();\n    const groupChecked = (_MGFilters$group = MGFilters[group]) !== null && _MGFilters$group !== void 0 ? _MGFilters$group : false;\n    return matchesQuery && groupChecked;\n  }).sort((a, b) => a.name.localeCompare(b.name)); // ✅ alphabetic sort\n\n  const handleMGCheckboxChange = group => {\n    setMGFilters(prev => ({\n      ...prev,\n      [group]: !prev[group]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Muscle Encyclopedia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerconsole\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search muscles...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: {\n            width: \"80%\",\n            padding: \"10px\",\n            marginTop: \"20px\",\n            fontSize: \"16px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginTop: \"30px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: flipped,\n            onChange: () => setFlipped(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), \" \", \"Flip\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"90%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"20px\",\n          marginBottom: \"30px\"\n        },\n        children: Object.keys(MGFilters).map(group => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: MGFilters[group],\n            onChange: () => handleMGCheckboxChange(group)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), group.charAt(0).toUpperCase() + group.slice(1)]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: \"20px\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movement-grid\",\n          children: filtered.map(muscle => /*#__PURE__*/_jsxDEV(FlipCard, {\n            flippedState: flipped,\n            movement: {\n              id: muscle.id,\n              name: muscle.name,\n              type: muscle.muscle_group\n            }\n          }, muscle.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MusclesEncyclopedia, \"VHcyl5Zd5ZIAGovQDk6CCONcAKk=\");\n_c = MusclesEncyclopedia;\nvar _c;\n$RefreshReg$(_c, \"MusclesEncyclopedia\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","FlipCard","getAllMuscles","jsxDEV","_jsxDEV","MusclesEncyclopedia","_s","muscles","setMuscles","query","setQuery","flipped","setFlipped","MGFilters","setMGFilters","arm","back","chest","core","etc","foot","hand","leg","neck","shoulder","then","data","catch","console","error","filtered","filter","m","_m$muscle_group","_MGFilters$group","matchesQuery","name","toLowerCase","includes","group","muscle_group","groupChecked","sort","a","b","localeCompare","handleMGCheckboxChange","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","type","placeholder","value","onChange","e","target","width","padding","fontSize","border","borderRadius","marginBottom","checked","display","flexWrap","justifyContent","gap","Object","keys","map","charAt","toUpperCase","slice","muscle","flippedState","movement","id","_c","$RefreshReg$"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/pages/MusclesEncyclopedia.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar.tsx\";\nimport FlipCard from \"../components/Flipcard.tsx\";\nimport \"./Encyclopedia.css\";\nimport { getAllMuscles } from \"../components/movementService.js\";\n\nexport default function MusclesEncyclopedia() {\n  const [muscles, setMuscles] = useState([]); // store as array for easy filtering\n  const [query, setQuery] = useState(\"\");\n  const [flipped, setFlipped] = useState(false);\n\n  const [MGFilters, setMGFilters] = useState({\n    arm: true,\n    back: true,\n    chest: true,\n    core: true,\n    etc: true,\n    foot: true,\n    hand: true,\n    leg: true,\n    neck: true,\n    shoulder: true,\n  });\n\n  useEffect(() => {\n    getAllMuscles()\n      .then((data) => setMuscles(data))\n      .catch(console.error);\n  }, []);\n\n  // ✅ filtering by name + group checkbox\n  const filtered = muscles\n    .filter((m) => {\n      const matchesQuery = m.name.toLowerCase().includes(query.toLowerCase());\n      const group = m.muscle_group?.toLowerCase();\n      const groupChecked = MGFilters[group] ?? false;\n      return matchesQuery && groupChecked;\n    })\n    .sort((a, b) => a.name.localeCompare(b.name)); // ✅ alphabetic sort\n\n  const handleMGCheckboxChange = (group) => {\n    setMGFilters((prev) => ({\n      ...prev,\n      [group]: !prev[group],\n    }));\n  };\n\n  return (\n    <div className=\"background\">\n      <NavBar />\n      <div style={{ marginTop: \"2rem\" }}></div>\n      <div className=\"title\">Muscle Encyclopedia</div>\n\n      <div className=\"centerconsole\">\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search muscles...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            style={{\n              width: \"80%\",\n              padding: \"10px\",\n              marginTop: \"20px\",\n              fontSize: \"16px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"8px\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <label style={{ marginTop: \"30px\" }}>\n            <input\n              type=\"checkbox\"\n              checked={flipped}\n              onChange={() => setFlipped((prev) => !prev)}\n            />{\" \"}\n            Flip\n          </label>\n        </div>\n\n        <hr style={{ width: \"90%\" }} />\n\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          {Object.keys(MGFilters).map((group) => (\n            <label key={group}>\n              <input\n                type=\"checkbox\"\n                checked={MGFilters[group]}\n                onChange={() => handleMGCheckboxChange(group)}\n              />\n              {group.charAt(0).toUpperCase() + group.slice(1)}\n            </label>\n          ))}\n        </div>\n\n        {/* ✅ Grid of FlipCards */}\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"20px\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div className=\"movement-grid\">\n            {filtered.map((muscle) => (\n              <FlipCard\n                key={muscle.id}\n                flippedState={flipped}\n                movement={{\n                  id: muscle.id,\n                  name: muscle.name,\n                  type: muscle.muscle_group,\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}