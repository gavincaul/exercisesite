{"ast":null,"code":"var _jsxFileName = \"/home/gavin/VSC/Websites/exercisesite/client/src/components/GroupedExercises.tsx\";\nimport React from \"react\";\nimport ExerciseCard from \"./ExerciseCard.tsx\"; // Make sure this accepts movement_name!\nimport \"./GroupedExercises.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupedExercises({\n  groupedData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouped-container\",\n    children: [console.log(groupedData), groupedData.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"group-title\",\n        children: group.routine_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: \"#555\"\n        },\n        children: group.routine_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-list\",\n        children: group.exercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          name: exercise.movement_name || `Exercise #${exercise.exercise_id}`,\n          sets: exercise.sets,\n          reps: exercise.reps,\n          time: exercise.time,\n          rest: exercise.rest,\n          instructions: exercise.instructions\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, group.routine_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = GroupedExercises;\nvar _c;\n$RefreshReg$(_c, \"GroupedExercises\");","map":{"version":3,"names":["React","ExerciseCard","jsxDEV","_jsxDEV","GroupedExercises","groupedData","className","children","console","log","map","group","routine_name","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","color","routine_description","exercises","exercise","idx","name","movement_name","exercise_id","sets","reps","time","rest","instructions","routine_id","_c","$RefreshReg$"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/components/GroupedExercises.tsx"],"sourcesContent":["import React from \"react\";\nimport ExerciseCard from \"./ExerciseCard.tsx\"; // Make sure this accepts movement_name!\nimport \"./GroupedExercises.css\";\nexport default function GroupedExercises({ groupedData }) {\n  return (\n    <div className=\"grouped-container\">\n      {console.log(groupedData)}\n      {groupedData.map((group) => (\n        <div key={group.routine_id} className=\"group\">\n          <h2 className=\"group-title\">{group.routine_name}</h2>\n          <p style={{ marginBottom: \"1rem\", color: \"#555\" }}>\n            {group.routine_description}\n          </p>\n          <div className=\"exercise-list\">\n            {group.exercises.map((exercise, idx) => (\n              <ExerciseCard\n                key={idx}\n                name={exercise.movement_name || `Exercise #${exercise.exercise_id}`}\n                sets={exercise.sets}\n                reps={exercise.reps}\n                time={exercise.time}\n                rest={exercise.rest}\n                instructions={exercise.instructions}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,oBAAoB,CAAC,CAAC;AAC/C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACxD,oBACEF,OAAA;IAAKG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC/BC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC,EACxBA,WAAW,CAACK,GAAG,CAAEC,KAAK,iBACrBR,OAAA;MAA4BG,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAC3CJ,OAAA;QAAIG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEI,KAAK,CAACC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrDb,OAAA;QAAGc,KAAK,EAAE;UAAEC,YAAY,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAZ,QAAA,EAC/CI,KAAK,CAACS;MAAmB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACJb,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BI,KAAK,CAACU,SAAS,CAACX,GAAG,CAAC,CAACY,QAAQ,EAAEC,GAAG,kBACjCpB,OAAA,CAACF,YAAY;UAEXuB,IAAI,EAAEF,QAAQ,CAACG,aAAa,IAAI,aAAaH,QAAQ,CAACI,WAAW,EAAG;UACpEC,IAAI,EAAEL,QAAQ,CAACK,IAAK;UACpBC,IAAI,EAAEN,QAAQ,CAACM,IAAK;UACpBC,IAAI,EAAEP,QAAQ,CAACO,IAAK;UACpBC,IAAI,EAAER,QAAQ,CAACQ,IAAK;UACpBC,YAAY,EAAET,QAAQ,CAACS;QAAa,GAN/BR,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOT,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAjBEL,KAAK,CAACqB,UAAU;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBrB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACiB,EAAA,GA3BuB7B,gBAAgB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}