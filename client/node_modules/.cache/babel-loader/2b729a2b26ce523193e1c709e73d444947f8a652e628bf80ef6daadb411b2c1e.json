{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import NavBar from\"../components/NavBar.tsx\";import FlipCard from\"../components/Flipcard.tsx\";import\"./Encyclopedia.css\";import{getAllMuscles}from\"../components/movementService.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MusclesEncyclopedia(){const[muscles,setMuscles]=useState([]);// store as array for easy filtering\nconst[query,setQuery]=useState(\"\");const[flipped,setFlipped]=useState(false);const[MGFilters,setMGFilters]=useState({arm:true,back:true,chest:true,core:true,etc:true,foot:true,hand:true,leg:true,neck:true,shoulder:true});useEffect(()=>{getAllMuscles().then(data=>setMuscles(data)).catch(console.error);},[]);// ✅ filtering by name + group checkbox\nconst filtered=muscles.filter(m=>{var _m$muscle_group,_MGFilters$group;const matchesQuery=m.name.toLowerCase().includes(query.toLowerCase());const group=(_m$muscle_group=m.muscle_group)===null||_m$muscle_group===void 0?void 0:_m$muscle_group.toLowerCase();const groupChecked=(_MGFilters$group=MGFilters[group])!==null&&_MGFilters$group!==void 0?_MGFilters$group:false;return matchesQuery&&groupChecked;}).sort((a,b)=>a.name.localeCompare(b.name));// ✅ alphabetic sort\nconst handleMGCheckboxChange=group=>{setMGFilters(prev=>({...prev,[group]:!prev[group]}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"background\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"2rem\"}}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Muscle Encyclopedia\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"centerconsole\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search muscles...\",value:query,onChange:e=>setQuery(e.target.value),style:{width:\"80%\",padding:\"10px\",marginTop:\"20px\",fontSize:\"16px\",border:\"1px solid #ccc\",borderRadius:\"8px\",marginBottom:\"10px\"}}),/*#__PURE__*/_jsxs(\"label\",{style:{marginTop:\"30px\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:flipped,onChange:()=>setFlipped(prev=>!prev)}),\" \",\"Flip\"]})]}),/*#__PURE__*/_jsx(\"hr\",{style:{width:\"90%\"}}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\",justifyContent:\"center\",gap:\"20px\",marginBottom:\"30px\"},children:Object.keys(MGFilters).map(group=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:MGFilters[group],onChange:()=>handleMGCheckboxChange(group)}),group.charAt(0).toUpperCase()+group.slice(1)]},group))}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\",gap:\"20px\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"movement-grid\",children:filtered.map(muscle=>/*#__PURE__*/_jsx(FlipCard,{flippedState:flipped,movement:{id:muscle.id,name:muscle.name,type:muscle.muscle_group}},muscle.id))})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","NavBar","FlipCard","getAllMuscles","jsx","_jsx","jsxs","_jsxs","MusclesEncyclopedia","muscles","setMuscles","query","setQuery","flipped","setFlipped","MGFilters","setMGFilters","arm","back","chest","core","etc","foot","hand","leg","neck","shoulder","then","data","catch","console","error","filtered","filter","m","_m$muscle_group","_MGFilters$group","matchesQuery","name","toLowerCase","includes","group","muscle_group","groupChecked","sort","a","b","localeCompare","handleMGCheckboxChange","prev","className","children","style","marginTop","type","placeholder","value","onChange","e","target","width","padding","fontSize","border","borderRadius","marginBottom","checked","display","flexWrap","justifyContent","gap","Object","keys","map","charAt","toUpperCase","slice","muscle","flippedState","movement","id"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/pages/MusclesEncyclopedia.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar.tsx\";\nimport FlipCard from \"../components/Flipcard.tsx\";\nimport \"./Encyclopedia.css\";\nimport { getAllMuscles } from \"../components/movementService.js\";\n\nexport default function MusclesEncyclopedia() {\n  const [muscles, setMuscles] = useState([]); // store as array for easy filtering\n  const [query, setQuery] = useState(\"\");\n  const [flipped, setFlipped] = useState(false);\n\n  const [MGFilters, setMGFilters] = useState({\n    arm: true,\n    back: true,\n    chest: true,\n    core: true,\n    etc: true,\n    foot: true,\n    hand: true,\n    leg: true,\n    neck: true,\n    shoulder: true,\n  });\n\n  useEffect(() => {\n    getAllMuscles()\n      .then((data) => setMuscles(data))\n      .catch(console.error);\n  }, []);\n\n  // ✅ filtering by name + group checkbox\n  const filtered = muscles\n    .filter((m) => {\n      const matchesQuery = m.name.toLowerCase().includes(query.toLowerCase());\n      const group = m.muscle_group?.toLowerCase();\n      const groupChecked = MGFilters[group] ?? false;\n      return matchesQuery && groupChecked;\n    })\n    .sort((a, b) => a.name.localeCompare(b.name)); // ✅ alphabetic sort\n\n  const handleMGCheckboxChange = (group) => {\n    setMGFilters((prev) => ({\n      ...prev,\n      [group]: !prev[group],\n    }));\n  };\n\n  return (\n    <div className=\"background\">\n      <NavBar />\n      <div style={{ marginTop: \"2rem\" }}></div>\n      <div className=\"title\">Muscle Encyclopedia</div>\n\n      <div className=\"centerconsole\">\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"Search muscles...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            style={{\n              width: \"80%\",\n              padding: \"10px\",\n              marginTop: \"20px\",\n              fontSize: \"16px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"8px\",\n              marginBottom: \"10px\",\n            }}\n          />\n          <label style={{ marginTop: \"30px\" }}>\n            <input\n              type=\"checkbox\"\n              checked={flipped}\n              onChange={() => setFlipped((prev) => !prev)}\n            />{\" \"}\n            Flip\n          </label>\n        </div>\n\n        <hr style={{ width: \"90%\" }} />\n\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            gap: \"20px\",\n            marginBottom: \"30px\",\n          }}\n        >\n          {Object.keys(MGFilters).map((group) => (\n            <label key={group}>\n              <input\n                type=\"checkbox\"\n                checked={MGFilters[group]}\n                onChange={() => handleMGCheckboxChange(group)}\n              />\n              {group.charAt(0).toUpperCase() + group.slice(1)}\n            </label>\n          ))}\n        </div>\n\n        {/* ✅ Grid of FlipCards */}\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"20px\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div className=\"movement-grid\">\n            {filtered.map((muscle) => (\n              <FlipCard\n                key={muscle.id}\n                flippedState={flipped}\n                movement={{\n                  id: muscle.id,\n                  name: muscle.name,\n                  type: muscle.muscle_group,\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}