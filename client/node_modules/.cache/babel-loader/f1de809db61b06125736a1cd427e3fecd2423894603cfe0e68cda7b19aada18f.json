{"ast":null,"code":"import axios from\"axios\";const BASE_URL=\"https://exercisesite-1e7b88b40e5c.herokuapp.com/\";export async function getAllMovements(){const res=await axios.get(`${BASE_URL}/api/movement`);return res.data;}export async function getAllMuscles(){const res=await axios.get(`${BASE_URL}/api/muscles`);return res.data;}export async function getGlobalWorkouts(){const res=await axios.get(`${BASE_URL}/api/routine/global`);return res.data;}export async function getUserWorkouts(userId){const res=await axios.get(`${BASE_URL}/api/routine/user/${userId}`);return res.data;}export async function getRoutineNums(){const res=await axios.get(`${BASE_URL}/api/routineIDs`);return res.data;}export async function organizePostData(workoutData,workouts){const workout_id=workoutData.id;const routine={};routine.name=workoutData.name;routine.description=workoutData.description;routine.user_id=workoutData.user_id;routine.id=workout_id;const exerciseList=workouts.map(workout=>{return{movement:workout.id,sets:workout.sets,reps:workout.reps,time:workout.time,instructions:workout.description,routine_id:workout_id};});return await postRoutineWithExercises(routine,exerciseList);}export async function postRoutineWithExercises(routine,exerciseList){try{const payload={routine,exerciseList};const res=await axios.post(`${BASE_URL}/api/postRoutines`,payload);return res.data;}catch(error){var _error$response;console.error(\"Error posting routine:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);throw error;}}export async function signup(email,password,inviteCode){const res=await axios.post(`${BASE_URL}/api/auth/signup`,{email,password,inviteCode});return res.data;}export async function login(email,password){const res=await axios.post(`${BASE_URL}/api/auth/login`,{email,password});return res.data;}export function getUser(){try{const userData=localStorage.getItem(\"user\");if(!userData)return null;return JSON.parse(userData);}catch(error){console.error(\"Error parsing user data from localStorage\",error);return null;}}","map":{"version":3,"names":["axios","BASE_URL","getAllMovements","res","get","data","getAllMuscles","getGlobalWorkouts","getUserWorkouts","userId","getRoutineNums","organizePostData","workoutData","workouts","workout_id","id","routine","name","description","user_id","exerciseList","map","workout","movement","sets","reps","time","instructions","routine_id","postRoutineWithExercises","payload","post","error","_error$response","console","response","message","signup","email","password","inviteCode","login","getUser","userData","localStorage","getItem","JSON","parse"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/components/movementService.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"https://exercisesite-1e7b88b40e5c.herokuapp.com/\";\nexport async function getAllMovements() {\n  const res = await axios.get(`${BASE_URL}/api/movement`);\n  return res.data;\n}\nexport async function getAllMuscles() {\n  const res = await axios.get(`${BASE_URL}/api/muscles`);\n  return res.data;\n}\n\nexport async function getGlobalWorkouts() {\n  const res = await axios.get(`${BASE_URL}/api/routine/global`);\n  return res.data;\n}\nexport async function getUserWorkouts(userId) {\n  const res = await axios.get(`${BASE_URL}/api/routine/user/${userId}`);\n  return res.data;\n}\n\nexport async function getRoutineNums() {\n  const res = await axios.get(`${BASE_URL}/api/routineIDs`);\n  return res.data;\n}\n\nexport async function organizePostData(workoutData, workouts) {\n  const workout_id = workoutData.id;\n  const routine = {};\n  routine.name = workoutData.name;\n  routine.description = workoutData.description;\n  routine.user_id = workoutData.user_id;\n  routine.id = workout_id;\n  const exerciseList = workouts.map(workout => {\n    return {\n      movement: workout.id,\n      sets: workout.sets,\n      reps: workout.reps,\n      time: workout.time,\n      instructions: workout.description,\n      routine_id: workout_id\n    };\n  }\n  );\n  return await postRoutineWithExercises(routine, exerciseList);\n\n}\n\n\nexport async function postRoutineWithExercises(routine, exerciseList) {\n  try {\n    const payload = {\n      routine,\n      exerciseList,\n    };\n\n    const res = await axios.post(`${BASE_URL}/api/postRoutines`, payload);\n\n    return res.data; \n  } catch (error) {\n    console.error(\"Error posting routine:\", error.response?.data || error.message);\n    throw error;\n  }\n}\n\n\nexport async function signup(email, password, inviteCode) {\n  const res = await axios.post(`${BASE_URL}/api/auth/signup`, { email, password, inviteCode });\n  return res.data;\n}\n\nexport async function login(email, password) {\n  const res = await axios.post(`${BASE_URL}/api/auth/login`, { email, password });\n  return res.data;\n}\n\nexport function getUser() {\n  try {\n    const userData = localStorage.getItem(\"user\");\n    if (!userData) return null;\n    return JSON.parse(userData);\n  } catch (error) {\n    console.error(\"Error parsing user data from localStorage\", error);\n    return null;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}