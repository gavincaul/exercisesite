{"ast":null,"code":"var _jsxFileName = \"/home/gavin/VSC/Websites/exercisesite/client/src/components/GroupedExercises.tsx\";\nimport React from \"react\";\nimport ExerciseCard from \"./ExerciseCard.tsx\"; // Make sure this accepts movement_name!\nimport \"./GroupedExercises.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupedExercises({\n  groupedData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouped-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"group-title\",\n        children: groupedData.routine_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: \"#555\"\n        },\n        children: groupedData.routine_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-list\",\n        children: groupedData.exercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n          name: exercise.movement_name || `Exercise #${exercise.exercise_id}`,\n          anatomyImg: \"~/anatomy/\" + exercise.name,\n          exerciseImg: \"~/anatomy/\" + exercise.name,\n          sets: exercise.sets,\n          reps: exercise.reps,\n          time: exercise.time,\n          rest: exercise.rest,\n          instructions: exercise.instructions\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, groupedData.routine_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = GroupedExercises;\nvar _c;\n$RefreshReg$(_c, \"GroupedExercises\");","map":{"version":3,"names":["React","ExerciseCard","jsxDEV","_jsxDEV","GroupedExercises","groupedData","className","children","routine_name","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","color","routine_description","exercises","map","exercise","idx","name","movement_name","exercise_id","anatomyImg","exerciseImg","sets","reps","time","rest","instructions","routine_id","_c","$RefreshReg$"],"sources":["/home/gavin/VSC/Websites/exercisesite/client/src/components/GroupedExercises.tsx"],"sourcesContent":["import React from \"react\";\nimport ExerciseCard from \"./ExerciseCard.tsx\"; // Make sure this accepts movement_name!\nimport \"./GroupedExercises.css\";\nexport default function GroupedExercises({ groupedData }) {\n  return (\n    <div className=\"grouped-container\">\n\n        <div key={groupedData.routine_id} className=\"group\">\n          <h2 className=\"group-title\">{groupedData.routine_name}</h2>\n          <p style={{ marginBottom: \"1rem\", color: \"#555\" }}>\n            {groupedData.routine_description}\n          </p>\n          <div className=\"exercise-list\">\n            {groupedData.exercises.map((exercise, idx) => (\n              <ExerciseCard\n                key={idx}\n                name={exercise.movement_name || `Exercise #${exercise.exercise_id}`}\n                anatomyImg={\"~/anatomy/\" + exercise.name}\n                exerciseImg={\"~/anatomy/\" + exercise.name}\n                sets={exercise.sets}\n                reps={exercise.reps}\n                time={exercise.time}\n                rest={exercise.rest}\n                instructions={exercise.instructions}\n              />\n            ))}\n          </div>\n        </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,oBAAoB,CAAC,CAAC;AAC/C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,eAAe,SAASC,gBAAgBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACxD,oBACEF,OAAA;IAAKG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAE9BJ,OAAA;MAAkCG,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACjDJ,OAAA;QAAIG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEF,WAAW,CAACG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3DT,OAAA;QAAGU,KAAK,EAAE;UAAEC,YAAY,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAR,QAAA,EAC/CF,WAAW,CAACW;MAAmB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACJT,OAAA;QAAKG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BF,WAAW,CAACY,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBACvCjB,OAAA,CAACF,YAAY;UAEXoB,IAAI,EAAEF,QAAQ,CAACG,aAAa,IAAI,aAAaH,QAAQ,CAACI,WAAW,EAAG;UACpEC,UAAU,EAAE,YAAY,GAAGL,QAAQ,CAACE,IAAK;UACzCI,WAAW,EAAE,YAAY,GAAGN,QAAQ,CAACE,IAAK;UAC1CK,IAAI,EAAEP,QAAQ,CAACO,IAAK;UACpBC,IAAI,EAAER,QAAQ,CAACQ,IAAK;UACpBC,IAAI,EAAET,QAAQ,CAACS,IAAK;UACpBC,IAAI,EAAEV,QAAQ,CAACU,IAAK;UACpBC,YAAY,EAAEX,QAAQ,CAACW;QAAa,GAR/BV,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAST,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GAnBEP,WAAW,CAAC0B,UAAU;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoB3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACoB,EAAA,GA3BuB5B,gBAAgB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}